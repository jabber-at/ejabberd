Source: ejabberd
Section: net
Priority: optional
Maintainer: Mathias Ertl <mati@jabber.at>
Build-Depends: debhelper (>= 9), dpkg-dev (>= 1.16.1~),
               erlang-asn1, erlang-base, erlang-crypto, erlang-dev (>= 1:15.b), erlang-eunit, erlang-inets, erlang-lager, erlang-jiffy, erlang-mnesia, erlang-parsetools,
               erlang-p1-cache-tab, erlang-p1-iconv, erlang-p1-mysql, erlang-p1-pam, erlang-p1-pgsql, erlang-p1-sip, erlang-p1-stringprep, erlang-p1-stun,
               erlang-p1-tls, erlang-p1-utils, erlang-p1-xml, erlang-p1-yaml, erlang-p1-zlib,
               erlang-ssl, erlang-xmlrpc,
               hevea, po-debconf, rebar, texlive-latex-base, texlive-latex-recommended, texlive-latex-extra
Standards-Version: 3.9.6
Homepage: http://www.process-one.net/en/projects/ejabberd/
Vcs-Git: https://git.fsinf.at/apt/ejabberd.git
Vcs-Browser: https://git.fsinf.at/apt/ejabberd

Package: ejabberd
Architecture: any
Depends: adduser, erlang-base (>= 1:15.b) | ${erlang-abi:Depends}, ${erlang:Depends}, openssl, ucf, ${misc:Depends}, ${shlibs:Depends},
               erlang-lager, erlang-jiffy, erlang-p1-cache-tab, erlang-p1-iconv, erlang-p1-mysql, erlang-p1-pam, erlang-p1-pgsql, erlang-p1-sip, erlang-p1-stringprep,
               erlang-p1-stun, erlang-p1-tls, erlang-p1-utils, erlang-p1-xml, erlang-p1-yaml, erlang-p1-zlib, erlang-xmlrpc
Provides: xmpp-server
Suggests: libunix-syslog-perl, imagemagick | graphicsmagick-imagemagick-compat,
 monit, ejabberd-mod-admin-extra, ejabberd-mod-muc-admin
Conflicts: ejabberd-mod-shared-roster-ldap, ejabberd-mod-xmlrpc
Description: distributed, fault-tolerant Jabber/XMPP server written in Erlang
 ejabberd is a distributed, fault-tolerant Jabber/XMPP server written in Erlang.
 Its features contain:
  - XMPP-compliant
  - Web based administration
  - Load balancing: can run in a cluster of machines
  - Fault-tolerance: database can be replicated and stored on multiple
    nodes (nodes can be added or replaced 'on the fly')
  - Virtual hosting: several virtual domains can be served using single ejabberd
    instance
  - SSL/TLS support
  - Multi-User Chat (MUC/conference)
  - IRC transport
  - Jabber Users Directory, based on users vCards
  - Service Discovery
  - Shared roster
