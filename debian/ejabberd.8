.TH ejabberd 8 "08 June 2008" "Version 2.0.1" "ejabberd manual page"

.SH NAME
ejabberd \(em a distributed fault-tolerant Jabber/XMPP server 

.SH SYNOPSIS
.PP 
\fBejabberd\fR \fI[options] [\-\-] [erlang_options]\fP

.SH DESCRIPTION
.PP 
\fBejabberd\fR is a distributed fault-tolerant Jabber/XMPP server written in
Erlang. 

Its main features are:
.PD 0
.TP
\(em XMPP-compliant 
.TP
\(em Distributed: \fBejabberd\fR can run on a cluster of machines
.TP
\(em Fault-tolerant: All the information can be stored on more than one node, nodes can be added or replaced `on the fly' 
.TP
\(em Built-in Multi-User Chat service 
.TP
\(em Built-in IRC transport 
.TP
\(em Built-in Publish-Subscribe service 
.TP
\(em Built-in Jabber User Directory service based on users vCards 
.TP
\(em SSL support 
.TP
\(em Support for internationalized user messages

.SH CONFIGURATION FILE
.PP 
The file \fB/etc/ejabberd/ejabberd.yml\fR contains the main configuration.
It is initially loaded the first time \fBejabberd\fR is
executed, then it is parsed and stored in a database. Subsequently the
configuration is loaded from the database and any commands in the configuration
file are appended to the entries in the database. 
The configuration file is written in YAML.

A complete explanation of the configuration file format and each configuration
value can be found in the official \fBejabberd\fR documentation. See 
"\fBSEE ALSO\fR" part of this manual page for more information about the
documentation.

.SH OPTIONS FILE
.PP 
The file \fB/etc/default/ejabberd\fR contains runtime-specific environment
variables. Please see the file itself for a description of available options.

.SH FILES
.PD 0
.TP
.I /etc/ejabberd/ejabberd.yml
default configuration file

.TP
.I /etc/default/ejabberd
default variables

.SH BUGS
.PP
Ejabberd uses distributed Erlang mode to work properly. This means that on start it
connects to \fBepmd\fP (Erlang port mapping daemon) which is listening at port 4369
and tries to register ejabberd node name. If the connection fails (known failure
reasons are unavailability of a loopback interface or firewall issues) Erlang emulator
fails to start with not very clear error message. If there's already started Erlang
node with the same name (\fIejabberd\fP by default) then ejabberd will also fail with
a cryptic error message (in which one can find words \fI{error,duplicate_name}\fP).
Another possible case when ejabberd cannot start is incorrect permissions of
\fI/var/lib/ejabberd\fP directory (it must be writable by user ejabberd).

.SH SEE ALSO 
.PP 
\fBerl\fR(1), \fBsasl\fR(6), \fBejabberdctl\fR(8), \fBepmd\fR. 

.PP 
The program documentation is available at
\fIhttp://www.process\-one.net/en/projects/ejabberd/\fP. 
A copy of the documentation can be found at
/usr/share/doc/ejabberd/guide.html.
 
.SH AUTHORS
.PP 
This manual page was adapted by Christophe Romain
<christophe.romain@process\-one.net> and Sergei Golovan <sgolovan@nes.ru> for
the \fBDebian\fP system (but may be used by others) from the \fBejabberd\fP
documentation written by Alexey Shchepin <alexey@sevcom.net>.

Permission is granted to copy, distribute and/or modify this document under 
the terms of the GNU General Public License, Version 2 any  
later version published by the Free Software Foundation. 
.PP 
On Debian systems, the complete text of the GNU General Public 
License can be found in /usr/share/common\-licenses/GPL. 

