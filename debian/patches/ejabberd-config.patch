--- a/ejabberd.yml.example
+++ b/ejabberd.yml.example
@@ -120,22 +120,24 @@
     ## certificate, specify the full path to the
     ## file and uncomment these lines:
     ##
-    ## certfile: "/path/to/ssl.pem"
+    certfile: "/etc/ejabberd/ejabberd.pem"
     ## starttls: true
     ##
     ## To enforce TLS encryption for client connections,
     ## use this instead of the "starttls" option:
     ##
-    ## starttls_required: true
+    starttls_required: true
     ##
     ## Custom OpenSSL options
     ##
-    ## protocol_options:
-    ##   - "no_sslv3"
+    protocol_options:
+       - "no_sslv3"
     ##   - "no_tlsv1"
     max_stanza_size: 65536
     shaper: c2s_shaper
     access: c2s
+    zlib: true
+    resend_on_timeout: if_offline
   - 
     port: 5269
     ip: "::"
@@ -181,6 +183,10 @@
     ## register: true
     captcha: true
 
+## Disabling digest-md5 SASL authentication. digest-md5 requires plain-text
+## password storage (see auth_password_format option).
+disable_sasl_mechanisms: "digest-md5"
+
 ###.  ==================
 ###'  S2S GLOBAL OPTIONS
 
@@ -189,17 +195,17 @@
 ## Allowed values are: false optional required required_trusted
 ## You must specify a certificate file.
 ##
-## s2s_use_starttls: optional
+s2s_use_starttls: required
 
 ##
 ## s2s_certfile: Specify a certificate file.
 ##
-## s2s_certfile: "/path/to/ssl.pem"
+s2s_certfile: "/etc/ejabberd/ejabberd.pem"
 
 ## Custom OpenSSL options
 ##
-## s2s_protocol_options:
-##   - "no_sslv3"
+s2s_protocol_options:
+   - "no_sslv3"
 ##   - "no_tlsv1"
 
 ##
@@ -243,7 +249,7 @@
 ##
 ## Store the plain passwords or hashed for SCRAM:
 ## auth_password_format: plain
-## auth_password_format: scram
+auth_password_format: scram
 ##
 ## Define the FQDN if ejabberd doesn't detect it:
 ## fqdn: "server3.example.com"
@@ -554,7 +560,7 @@
 ##
 ## Full path to a script that generates the image.
 ##
-## captcha_cmd: "/lib/ejabberd/priv/bin/captcha.sh"
+## captcha_cmd: "/usr/lib/ejabberd/priv/bin/captcha.sh"
 
 ##
 ## Host for the URL and port where ejabberd listens for CAPTCHA requests.
@@ -574,6 +580,7 @@
 ##
 modules: 
   mod_adhoc: {}
+  mod_admin_extra: {}
   ## mod_admin_extra: {}
   mod_announce: # recommends mod_adhoc
     access: announce
@@ -582,10 +589,16 @@
   mod_carboncopy: {}
   mod_client_state: {}
   mod_configure: {} # requires mod_adhoc
-  mod_disco: {}
-  ## mod_echo: {}
-  mod_irc: {}
-  mod_http_bind: {}
+  mod_disco:
+    server_info:
+      modules: all
+      name: "abuse-addresses"
+      urls: ["mailto:abuse@localhost"]
+  mod_echo: {}
+  mod_irc:
+    default_encoding: "utf-8"
+  mod_http_bind:
+    max_inactivity: 60
   ## mod_http_fileserver:
   ##   docroot: "/var/www"
   ##   accesslog: "/var/log/ejabberd/access.log"
@@ -597,13 +610,14 @@
     access_persistent: muc_create
     access_admin: muc_admin
   ## mod_muc_log: {}
-  ## mod_multicast: {}
+  mod_muc_admin: {}
+  mod_multicast: {}
   mod_offline: 
     access_max_user_messages: max_user_offline_messages
   mod_ping: {}
-  ## mod_pres_counter:
-  ##   count: 5
-  ##   interval: 60
+  mod_pres_counter:
+     count: 5
+     interval: 60
   mod_privacy: {}
   mod_private: {}
   ## mod_proxy65: {}
@@ -622,7 +636,7 @@
     ##
     ## Protect In-Band account registrations with CAPTCHA.
     ##
-    ## captcha_protected: true
+    captcha_protected: true
 
     ##
     ## Set the minimum informational entropy for passwords.
@@ -659,6 +673,7 @@
     access: register
   mod_roster: {}
   mod_shared_roster: {}
+  mod_sic: {}
   mod_stats: {}
   mod_time: {}
   mod_vcard: {}
--- a/ejabberdctl.cfg.example
+++ b/ejabberdctl.cfg.example
@@ -3,7 +3,7 @@
 # to the erlang runtime system when starting ejabberd
 #
 
-#' POLL: Kernel polling ([true|false])
+# POLL: Kernel polling ([true|false])
 #
 # The kernel polling option requires support in the kernel.
 # Additionally, you need to enable this feature while compiling Erlang.
@@ -12,8 +12,7 @@
 #
 #POLL=true
 
-#.
-#' SMP: SMP support ([enable|auto|disable])
+# SMP: SMP support ([enable|auto|disable])
 #
 # Explanation in Erlang/OTP documentation:
 # enable: starts the Erlang runtime system with SMP support enabled.
@@ -26,8 +25,7 @@
 #
 #SMP=auto
 
-#.
-#' ERL_MAX_PORTS: Maximum number of simultaneously open Erlang ports
+# ERL_MAX_PORTS: Maximum number of simultaneously open Erlang ports
 #
 # ejabberd consumes two or three ports for every connection, either
 # from a client or from another Jabber server. So take this into
@@ -38,8 +36,7 @@
 #
 #ERL_MAX_PORTS=32000
 
-#.
-#' FIREWALL_WINDOW: Range of allowed ports to pass through a firewall
+# FIREWALL_WINDOW: Range of allowed ports to pass through a firewall
 #
 # If Ejabberd is configured to run in cluster, and a firewall is blocking ports,
 # it's possible to make Erlang use a defined range of port (instead of dynamic
@@ -50,8 +47,7 @@
 #
 #FIREWALL_WINDOW=
 
-#.
-#' INET_DIST_INTERFACE: IP address where this Erlang node listens other nodes
+# INET_DIST_INTERFACE: IP address where this Erlang node listens other nodes
 #
 # This communication is used by ejabberdctl command line tool,
 # and in a cluster of several ejabberd nodes.
@@ -60,10 +56,7 @@
 #
 #INET_DIST_INTERFACE=127.0.0.1
 
-#.
-#' ERL_EPMD_ADDRESS: IP addresses where epmd listens for connections
-#
-# IMPORTANT: This option works only in Erlang/OTP R14B03 and newer.
+# ERL_EPMD_ADDRESS: IP addresses where epmd listens for connections
 #
 # This environment variable may be set to a comma-separated
 # list of IP addresses, in which case the epmd daemon
@@ -76,8 +69,7 @@
 #
 #ERL_EPMD_ADDRESS=127.0.0.1
 
-#.
-#' ERL_PROCESSES: Maximum number of Erlang processes
+# ERL_PROCESSES: Maximum number of Erlang processes
 #
 # Erlang consumes a lot of lightweight processes. If there is a lot of activity
 # on ejabberd so that the maximum number of processes is reached, people will
@@ -90,8 +82,7 @@
 #
 #ERL_PROCESSES=250000
 
-#.
-#' ERL_MAX_ETS_TABLES: Maximum number of ETS and Mnesia tables
+# ERL_MAX_ETS_TABLES: Maximum number of ETS and Mnesia tables
 #
 # The number of concurrent ETS and Mnesia tables is limited. When the limit is
 # reached, errors will appear in the logs:
@@ -103,8 +94,7 @@
 #
 #ERL_MAX_ETS_TABLES=1400
 
-#.
-#' ERL_OPTIONS: Additional Erlang options
+# ERL_OPTIONS: Additional Erlang options
 #
 # The next variable allows to specify additional options passed to erlang while
 # starting ejabberd. Some useful options are -noshell, -detached, -heart. When
@@ -118,8 +108,7 @@
 #
 #ERL_OPTIONS=""
 
-#.
-#' ERLANG_NODE: Erlang node name
+# ERLANG_NODE: Erlang node name
 #
 # The next variable allows to explicitly specify erlang node for ejabberd
 # It can be given in different formats:
@@ -136,8 +125,7 @@
 #
 #ERLANG_NODE=ejabberd@localhost
 
-#.
-#' EJABBERD_PID_PATH: ejabberd PID file
+# EJABBERD_PID_PATH: ejabberd PID file
 #
 # Indicate the full path to the ejabberd Process identifier (PID) file.
 # If this variable is defined, ejabberd writes the PID file when starts,
@@ -148,8 +136,7 @@
 #
 EJABBERD_PID_PATH=/run/ejabberd/ejabberd.pid
 
-#.
-#' EJABBERD_CONFIG_PATH: ejabberd configuration file
+# EJABBERD_CONFIG_PATH: ejabberd configuration file
 #
 # Specify the full path to the ejabberd configuration file. If the file name has
 # yml or yaml extension, it is parsed as a YAML file; otherwise, Erlang syntax is
