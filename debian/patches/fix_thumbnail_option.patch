From 1b368a86b709053ded0ebdfa0499cbd78712fce6 Mon Sep 17 00:00:00 2001
From: Holger Weiss <holger@zedat.fu-berlin.de>
Date: Mon, 2 Nov 2015 23:46:31 +0100
Subject: [PATCH] mod_http_upload: Use binary strings in most places

Switch to binary strings to fix a type issue, and for consistency.

Closes #808.

Applied in ejabberd 15.11+1.

---
 src/mod_http_upload.erl | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

--- a/src/mod_http_upload.erl
+++ b/src/mod_http_upload.erl
@@ -92,7 +92,7 @@
 	 slots = dict:new()     :: term()}). % dict:dict() requires Erlang 17.
 
 -record(media_info,
-	{type   :: string(),
+	{type   :: binary(),
 	 height :: integer(),
 	 width  :: integer()}).
 
@@ -719,7 +719,7 @@
 
 %% HTTP request handling.
 
--spec store_file(file:filename_all(), binary(),
+-spec store_file(binary(), binary(),
 		 integer() | undefined,
 		 integer() | undefined,
 		 binary(), binary(), boolean())
@@ -841,7 +841,7 @@
 %%--------------------------------------------------------------------
 %% Image manipulation stuff
 %%--------------------------------------------------------------------
--spec identify(string()) -> {ok, media_info()} | {error, string()}.
+-spec identify(binary()) -> {ok, media_info()} | {error, binary()}.
 
 identify(Path) ->
     Cmd = lists:flatten(io_lib:fwrite("identify -format \"ok %m %h %w\" ~s",
@@ -850,12 +850,12 @@
     case string:tokens(Res, " ") of
 	["ok", T, H, W] ->
 	    {ok, #media_info{
-		    type = string:to_lower(T),
+            type = list_to_binary(string:to_lower(T)),
 		    height = list_to_integer(H),
 		    width = list_to_integer(W)}};
 	_ ->
 	    ?ERROR_MSG("failed to identify type of ~s: ~s", [Path, Res]),
-	    {error, Res}
+        {error, list_to_binary(Res)}
     end.
 
 -spec convert(string(), media_info()) -> {ok, string()} | pass.
@@ -866,9 +866,9 @@
 	    pass;
        (W =< 300) and (H =< 300) ->
 	    {ok, Path};
-       T == "gif"; T == "jpeg"; T == "png"; T == "webp" ->
+       T == <<"gif">>; T == <<"jpeg">>; T == <<"png">>; T == <<"webp">> ->
 	    Dir = filename:dirname(Path),
-	    FileName = binary_to_list(randoms:get_string()) ++ "." ++ T,
+	    FileName = <<(randoms:get_string())/binary, $., T/binary>>,
 	    OutPath = filename:join(Dir, FileName),
 	    Cmd = lists:flatten(io_lib:fwrite("convert -resize 300 ~s ~s",
 					      [Path, OutPath])),
@@ -885,10 +885,10 @@
 	    pass
     end.
 
--spec thumb_el(string(), binary()) -> xmlel().
+-spec thumb_el(binary(), binary()) -> xmlel().
 
 thumb_el(Path, URI) ->
-    ContentType = guess_content_type(list_to_binary(Path)),
+    ContentType = guess_content_type(Path),
     case identify(Path) of
 	{ok, #media_info{height = H, width = W}} ->
 	    #xmlel{name = <<"thumbnail">>,
